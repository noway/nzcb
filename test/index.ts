import { expect } from "chai";
import { ethers } from "hardhat";
import { NZCOVIDBadge } from "../typechain";

const a: [bigint, bigint] = [
  4121745176342597789136770973022776790739432511025396054059983293468563743385n, 5487528317701654699472294238975712264208021864345680894679201230717526293867n
]

const b: [[bigint, bigint],[bigint, bigint]] = 
  [[11073023599814217189304591557517845609121126091167894404602868744081798402214n, 8789603760936810492318929603762240484850214444021387445080201431595418948611n], [11418442315355766077534296427282460642855786446073237008164794662509203235107n, 20737180799573811520838532444804591001462475093507592260093850141052562199311n]]

const c: [bigint, bigint] = [1028546350178609515692678068031149437504661244443131952435099557891040235077n, 10879563735156659176541504877990982450500988408022307877598352088723069095847n]

// const input: [bigint, bigint, bigint] = [
//   8464235439336389695359576364537904521787463454426143836621154307990710930n, 334204042160295982690797293769892102755483197293558786265320143920457223185n, 430989588176825940781496969207245773238692149205558489568811355968561479680n
// ]


const A = [ "17285857194286030951643413384080770128102555891376275650920632385206886588209", "8146744797527597683612285820739161785613066720976189539337401542346009411025", "1" ]
const B = [ "15682504116274798503014934889003500525027713415048530262804470773169924756544", "16147034893940752680027763009018539429022116647353747304980448414620142532374", "1" ]
const C = [ "12085574453551961734401969337257584932726570462480358679465358620917939959720", "10067483988196768474380294571499252508931711761800186124617952567567149776216", "1" ]
const T1 = [ "9341776045511567742705047838971603534293703828473589813224018950900935709358", "1991419358367301347015760791834569564955086211461334090131250296995947056397", "1" ]
const T2 = [ "15139914011206602215573065149449112119374012195722218343755684376017158290698", "20962019652951085634301364474115330989894673248155900462739025467051618513157", "1" ]
const T3 = [ "16051847535986722328308654216307776777454974101336585083035415812835527494703", "2481762947298090707152429542320583588166801204862240887274669870827553850369", "1" ]
const Wxi = [ "2969543294423175071507798246441250629865870147863651073753451271912936634631", "15467792113195698219865595327163140277104325078439095146927031196510092437254", "1" ]
const Wxiw = [ "15287833335678082990805431028497776140936741124163965407078004429260927474436", "384092082319840676379837130201641207993929791856035480592481747713766812750", "1" ]
const Z = [ "17233356032174959935462299411402444862306272851918465453525840747130034079125", "14330383888858615496931317939370288610560509893872354346781519905233457242924", "1" ]
const curve = "bn128"
const eval_a = "20873124803111981482158637286573548102186240982833174526255697778284927955180"
const eval_b = "14725117969359343640282739098483759411202136774012105531473320282499171717922"
const eval_c = "13522439859327188316271521022912781506058520813094819066815702996397417121410"
const eval_r = "3645660092017650040225974040904310034976842565433931976595237367298016916187"
const eval_s1 = "245581223381763181115398381709173291740991302828802067918080773517942876358"
const eval_s2 = "18283024571994954244371580939691607922437711646043720896247050161012382161604"
const eval_zw = "20841814415782754133466958283685247955238275734380821043703696797913083330243"
const protocol = "plonk"
const proof = "0x1b32670a37e83f8e358e6991cd255b6699e9a0c0cbf02cc9fa107d93355ea80321cf4b121b8614f8a5331d0dd1c9245f598e69cf1a2594d43f8856efe84e1f2c2f0b9fd25f3cd6d79a81c91a28836b7e50b1c82c5458fd2986e20adbf1b5906e056dc87a4cff8abac9b4cc5140181f08463df88e3349d7c343e76842aa3193970c7f33f05d0458c6158a8346e13e19f16aff1b8a25f58de94b7d844d37d01bba0f0d7f9fd3770100519e05977a27e456b0eb51ff8594afd16ee4c83380a4dc6301cad93efecd4fe96bf6fb6b2b48fe71aad2f0f0014790aa52defe5f9c1258931178071c072843bc078bcb712451293b4500a8f0460fcb2805889632383c11660c6a4ecbdaaf2f25fbf556950a0d1ccbde9b900d8b4ac2973782fdb6d51c62db101f431245f978df767b76ba3535f5de3cbd4a88a7eae8a78775c79622e5363e1056d3f34fb75936ad3648463d6bf573cf872a26ac697b54f1bb689efa9c594128e561b4dd0b0d59175a3dba1066892525bde4e6a5f6138dc92ec5ae6b0ef399084f9da20e7549239511240e0056f816e2c71981c28c88d9d373eee3c16c2d3f1af4ae5105e24275db65eb964453d036fca7d1ac628cb06d99b420b362f841e52fcceaaa55ca48577ad678a888d4377bfebdbb1f69cf6fdad3df8b1be4ef9d022fdbf36636a1068ef3a2e72f1e2fb560064c7e5916afbed235a9561bfb19cc7b2770f882a737e46248a311de5183d0125558c0a79fd8f24bb17b2a2a1b266ef2045a2f533c2f1ca9cc1391fb19a1619c384d3dcc4c1aa93ed53a39d946b713320225b203b4c9e08ba45cd57b16663e05220b16c2bcb2101a93512f6e1b890a452444617139d2693bd03c588da6f2dc81e5dcf81988481a75f448a60631d7145116c0a8ad7d10a1f760d32389c7d2025dd9b946284db5ea5f65d7e61faabb92642d50580ca67820706a33dad61b511c3de7a4b553267ad10f013b023bc19d449220c8c4c0c9b0be00012e79103c6f07baf9039233c2bd34094b4cda5296fb0c2f07364e1fa4c374f027b222538b9e4478c396741d668be0fdc987ac21dca5725b2506751525d132f16cd6d4345bc01fb87f5b9022b009aa32242029a92ac2003e"

const input = [
"8464235439336389695359576364537904521787463454426143836621154307990710930","334204042160295982690797293769892102755483197293558786265320143920457223185","430989588176825346791827322625404962104722513508263561834535300537883033600",
]

// const credSubjHash = "0x5fb355822221720ea4ce6734e5a09e459d452574a19310c0cea7c141f43a3dab"

const r = "0xD2E07B1DD7263D833166BDBB4F1A093837A905D7ECA2EE836B6B2ADA23C23154";
const s = "0xFBA88A529F675D6686EE632B09EC581AB08F72B458904BB3396D10FA66D11477";

describe("NZCOVIDBadge only mint", function () {
  let covidBadge: NZCOVIDBadge

  before(async () => {
    const PlonkVerifier = await ethers.getContractFactory("PlonkVerifier");
    const plonk = await PlonkVerifier.deploy();

    const NZCOVIDBadge = await ethers.getContractFactory("NZCOVIDBadge");
    covidBadge = await NZCOVIDBadge.deploy("NZ COVID Badge", "NZCP", plonk.address);
    await covidBadge.deployed();
  })

  it("Should mint", async function () {
    const mintTx = await covidBadge.mint(proof, input, [r, s])
    const res = await mintTx.wait();
  });
});

describe("NZCOVIDBadge check logic", function () {
  let covidBadge: NZCOVIDBadge

  before(async () => {
    const PlonkVerifier = await ethers.getContractFactory("PlonkVerifier");
    const plonk = await PlonkVerifier.deploy();

    const NZCOVIDBadge = await ethers.getContractFactory("NZCOVIDBadge");
    covidBadge = await NZCOVIDBadge.deploy("NZ COVID Badge", "NZCP", plonk.address);
    await covidBadge.deployed();
  })

  it("Should mint", async function () {
    await expect(covidBadge.tokenURI(0)).to.be.revertedWith("URI query for nonexistent token");
    const mintTx = await covidBadge.mint(proof, input, [r, s])
    await mintTx.wait();
    expect(await covidBadge.tokenURI(0)).to.equal("https://i.imgur.com/QYKQsql.jpg");
  });

  it("Should not mint again", async function () {
    expect(await covidBadge.tokenURI(0)).to.equal("https://i.imgur.com/QYKQsql.jpg");
    await expect(covidBadge.mint(proof, input, [r, s])).to.be.revertedWith("Already minted");
  });

  // it("Should show as minted for this cred subj hash", async function () {
  //   expect(await covidBadge.hasMinted(credSubjHash)).to.equal(1);
  // });

  it("Should show the signer as owner for token id 0", async function () {
    expect(await covidBadge.getOwner(0)).to.equal("0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266");
  });
});
