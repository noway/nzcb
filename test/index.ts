import { expect } from "chai";
import { ethers } from "hardhat";
import { NZCOVIDBadge } from "../typechain";

const a: [bigint, bigint] = [
  4121745176342597789136770973022776790739432511025396054059983293468563743385n, 5487528317701654699472294238975712264208021864345680894679201230717526293867n
]

const b: [[bigint, bigint],[bigint, bigint]] = 
  [[11073023599814217189304591557517845609121126091167894404602868744081798402214n, 8789603760936810492318929603762240484850214444021387445080201431595418948611n], [11418442315355766077534296427282460642855786446073237008164794662509203235107n, 20737180799573811520838532444804591001462475093507592260093850141052562199311n]]

const c: [bigint, bigint] = [1028546350178609515692678068031149437504661244443131952435099557891040235077n, 10879563735156659176541504877990982450500988408022307877598352088723069095847n]

const input: [bigint, bigint, bigint] = [
  8464235439336389695359576364537904521787463454426143836621154307990710930n, 334204042160295982690797293769892102755483197293558786265320143920457223185n, 430989588176825940781496969207245773238692149205558489568811355968561479680n
]


const A = [ "12301500420348015237989127501655055035372779750302270987147342222555086759939", "15292579464810555650793117706392018709443858103524672681034654061333245206316", "1" ]
const B = [ "21279242250413717797427806165942470217460219655608619004490900567656112689262", "2455534219468885351203168404358499835070460388944717361726259073228708352919", "1" ]
const C = [ "5652502229472769188919041956445602740786205811792699101332302424797227260858", "6808542571278526212022343074951934903869344058268306541421467636013134568547", "1" ]
const T1 = [ "5615583803980074667618132356390956330876606827510131140814339351252353966811", "7292240745993842123763409308368184543623415359862364247720026295137084978750", "1" ]
const T2 = [ "7390417253044512428892011542879042970075599761931137867492182770852281735489", "18497796266629507363923088881001472090435265354044789913929375898550322262937", "1" ]
const T3 = [ "3759171649994050287434296447733336892181697644162853130891028489419314965823", "12192447835210512734968474375995195427941838926567300330694878076431003828709", "1" ]
const Wxi = [ "21620760285499152084947346013020637876882213230094593242816477603332243823874", "21647323270629922425575507663507778470524387493699344309046217936833093422203", "1" ]
const Wxiw = [ "17839803121499784375998760419749723358131045329175581393394660702002386202354", "1968594256255110911918233613427609143731784347836187428239052237251200619314", "1" ]
const Z = [ "810715332976229544324417454757525898602447364315294015352030971868319209619", "7901389141545618868443165861903570188939047143640094966986939488381523726694", "1" ]
const curve = "bn128"
const eval_a = "971227649332161653762212561512203466066327274083963712838006801315362572869"
const eval_b = "16404080671361490906877709656389811953287609819496943467819318444226613023825"
const eval_c = "10291281475897223313912421892194455812405013032651579325182222632154918785636"
const eval_r = "16746984554433595449126168185328076520196458015220561052931885282967987290174"
const eval_s1 = "20496033646158393479944241770499756417173098978076127211880021299265145750674"
const eval_s2 = "14828738507454410481447718363276773684750579879632606951940628782019499461679"
const eval_zw = "3262138870905915911159697754099524449199149217729564001659974308703196508763"
const protocol = "plonk"

// const credSubjHash = "0x5fb355822221720ea4ce6734e5a09e459d452574a19310c0cea7c141f43a3dab"

const r = "0xD2E07B1DD7263D833166BDBB4F1A093837A905D7ECA2EE836B6B2ADA23C23154";
const s = "0xFBA88A529F675D6686EE632B09EC581AB08F72B458904BB3396D10FA66D11477";

describe("NZCOVIDBadge only mint", function () {
  let covidBadge: NZCOVIDBadge

  before(async () => {
    const NZCOVIDBadge = await ethers.getContractFactory("NZCOVIDBadge");
    covidBadge = await NZCOVIDBadge.deploy("NZ COVID Badge", "NZCP");
    await covidBadge.deployed();
  })

  it("Should mint", async function () {
    const mintTx = await covidBadge.mint(a, b, c, input, [r, s])
    await mintTx.wait();
  });
});

describe("NZCOVIDBadge check logic", function () {
  let covidBadge: NZCOVIDBadge

  before(async () => {
    const NZCOVIDBadge = await ethers.getContractFactory("NZCOVIDBadge");
    covidBadge = await NZCOVIDBadge.deploy("NZ COVID Badge", "NZCP");
    await covidBadge.deployed();
  })

  it("Should mint", async function () {
    await expect(covidBadge.tokenURI(0)).to.be.revertedWith("URI query for nonexistent token");
    const mintTx = await covidBadge.mint(a, b, c, input, [r, s])
    await mintTx.wait();
    expect(await covidBadge.tokenURI(0)).to.equal("https://i.imgur.com/QYKQsql.jpg");
  });

  it("Should not mint again", async function () {
    expect(await covidBadge.tokenURI(0)).to.equal("https://i.imgur.com/QYKQsql.jpg");
    await expect(covidBadge.mint(a, b, c, input, [r, s])).to.be.revertedWith("Already minted");
  });

  // it("Should show as minted for this cred subj hash", async function () {
  //   expect(await covidBadge.hasMinted(credSubjHash)).to.equal(1);
  // });

  it("Should show the signer as owner for token id 0", async function () {
    expect(await covidBadge.getOwner(0)).to.equal("0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266");
  });
});
